import React, { Component } from 'react';
import {
    Text,
    View,
} from 'react-native';

import { StripeProvider, Elements, CardNumberElement } from 'react-stripe-elements';
import { StripeCheckout } from 'react-stripe-checkout';


export default class Payment extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            loading: true,
            stripeLoading: true,
        };
        this.onStripeUpdate = this.onStripeUpdate.bind(this);
        this.loadStripe = this.loadStripe.bind(this);
    }

    loadStripe(onload) {
        if(! window.StripeCheckout) {
            const script = document.createElement('script');
            script.onload = function () {
                console.info("Stripe script loaded");
                onload();
            };
            script.src = 'https://checkout.stripe.com/checkout.js';
            document.head.appendChild(script);
        } else {
            onload();
        }
    }

    componentDidMount() {

        this.loadStripe(() => {
            this.stripeHandler = window.StripeCheckout.configure({
                key: 'pk_test_...',
                image: 'https://stripe.com/img/documentation/checkout/marketplace.png',
                locale: 'auto',
                token: (token) => {
                    this.setState({ loading: true });
                    fetch('...My backend code', {
                        method: 'POST',
                        stripeToken: token.id,
                        body: JSON.stringify(tokenId),
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json',
                        },
                    })
    
                    .then((response) => response.text())
                    .then((responseJson) => {
                        alert(JSON.stringify(responseJson));
                        console.log(responseJson);
                    })
                    .done();
                }
            });

            this.setState({
                stripeLoading: false,
                loading: false,
            });
        });
    }
    componentWillUnmount() {
        if(this.stripeHandler) {
            this.stripeHandler.close();
        }
    }

    onStripeUpdate(e) {
        this.stripeHandler.open({
            name: 'test',
            description: 'widget',
            panelLabel: 'Update Credit Card',
            allowRememberMe: false,
        });
        e.preventDefault();
    }

    render() {
        const { stripeLoading, loading } = this.state;
        return (
            <View>
                <Elements>
                    <Text>Click to pay with card</Text>
                        <StripeCheckout 
                            name={'Test Sending A Charge'}
                            description={'This will send a checkout to stripe api'}
                            amount={1}
                    />
                </Elements>
            </View>
        );
    }
}