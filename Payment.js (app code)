import React, {Component} from 'react';
import {
    View,
    Text,
    StyleSheet,
    TouchableOpacity,
} from 'react-native';

import { CreditCardInput } from 'react-native-credit-card-input';
import {StackNavigator} from 'react-navigation';

const STRIPE_ERROR = 'Payment service error. Try again later.';
const SERVER_ERROR = 'Server error. Try again later.';
const STRIPE_PUBLISHABLE_KEY = 'p_key';

const createCreditCardToken = (creditCardData) => {
    const card = {
        'card[number]': creditCardData.values.number.replace(/ /g, ''),
        'card[exp_month]': creditCardData.values.expiry.split('/') [0],
        'card[exp_year]': creditCardData.values.expiry.split('/') [1],
        'card[cvc]': creditCardData.values.cvc
    };
};


export default class Payment extends React.Component {

    constructor(props) {
        super(props);
        this.state = { cardData: { valid: false } };
    }

    _onFocus = field => console.log('focusing', field)

    render() {
        return (
            <View style={StyleSheet.container}>

                <Text style={style.header}></Text>
                <CreditCardInput 
                    autoFocus

                    requiresName
                    requiresCVC
                    requiresPostalCode

                    validColor="black"
                    invalidColor="red"
                    placeholderColor="darkgray"
                    labelStyle={{color: 'black', fontSize: 12}}
                    inputStyle={{color: 'black', fontSize: 16}}
                    
                    onChange={(cardData) => this.setState({ cardData })}
                    onFocus={this._onFocus}

                />
                
                <TouchableOpacity 
                    style={style.btn}
                    onPress={this.submit}>
                    <Text style={style.Text}>Submit</Text>
                </TouchableOpacity>

            </View>
        );
    }

   Submit = () => {

        let paymentinfo = {
            number: this.state.number,
            expiry: this.state.expiry,
            cvc: this.state.cvc,
            name: this.state.name,
            postalCode: this.state.postalCode,
        };
          
        fetch('my backend code', {
            method: 'POST',
            body: JSON.stringify(paymentinfo),
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
            },
        })
        
        .then((response) => response.text())
        .then((responseJson) => {
            alert(JSON.stringify(responseJson));
            console.log(responseJson);
    
            this.props.navigation.navigate('Home');
        })
        .done();
      }

}; 


const style = StyleSheet.create({
    container: {
        flex: 1,
        marginTop: 10,
        backgroundColor: 'blue',
    },
    btn: {
        alignSelf: 'center',
        backgroundColor: 'white',
        padding: 20,
        alignItems: 'center',
        fontSize: 10,  
    },
    header: {
        fontSize: 24,
        marginBottom: 60,
        color: 'black',
        fontWeight: 'bold',
        alignSelf: 'center'
    },
    Text: {
        fontWeight: 'bold',
        fontSize: 20,
    },
